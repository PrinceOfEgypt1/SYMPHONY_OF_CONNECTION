#!/bin/bash

echo "üîÑ TRANSFERINDO DOCUMENTOS DO WINDOWS PARA O REPOSIT√ìRIO"

# Diret√≥rio de origem no Windows (via montagem SMB ou via SSH)
WINDOWS_SOURCE="/mnt/windows/Users/Projetos/SYMPHONY_OF_CONNECTION"
LOCAL_PROJECT_DIR="$HOME/workspace/SYMPHONY_OF_CONNECTION"

# Nomes dos arquivos que precisam ser transferidos
DOCUMENT1="ARQUITETURA T√âCNICA E PADR√ïES DE DESENVOLVIMENTO"
DOCUMENT2="INSTRU√á√ïES OBRIGAT√ìRIAS - SYMPHONY OF CONNECTION"

# Verificar se o diret√≥rio do Windows est√° montado
check_windows_access() {
    echo "üîç Verificando acesso aos arquivos do Windows..."
    
    # M√©todo 1: Verificar se est√° montado via SMB
    if [ -d "$WINDOWS_SOURCE" ]; then
        echo "‚úÖ Diret√≥rio do Windows detectado via montagem SMB"
        return 0
    fi
    
    # M√©todo 2: Tentar acessar via caminho alternativo
    ALTERNATE_PATH="/media/moises/windows/Users/Projetos/SYMPHONY_OF_CONNECTION"
    if [ -d "$ALTERNATE_PATH" ]; then
        WINDOWS_SOURCE="$ALTERNATE_PATH"
        echo "‚úÖ Diret√≥rio do Windows detectado em localiza√ß√£o alternativa"
        return 0
    fi
    
    # M√©todo 3: Verificar se os arquivos j√° foram copiados anteriormente
    if [ -f "$LOCAL_PROJECT_DIR/$DOCUMENT1" ] && [ -f "$LOCAL_PROJECT_DIR/$DOCUMENT2" ]; then
        echo "‚úÖ Documentos j√° existem no projeto local"
        return 0
    fi
    
    echo "‚ùå N√£o foi poss√≠vel acessar os arquivos do Windows automaticamente"
    return 1
}

# Copiar documentos do Windows para o reposit√≥rio local
copy_documents() {
    echo "üìÅ Copiando documentos do Windows para o reposit√≥rio..."
    
    # Verificar se os arquivos existem no Windows
    if [ ! -f "$WINDOWS_SOURCE/$DOCUMENT1" ]; then
        echo "‚ùå Arquivo '$DOCUMENT1' n√£o encontrado em: $WINDOWS_SOURCE"
        return 1
    fi
    
    if [ ! -f "$WINDOWS_SOURCE/$DOCUMENT2" ]; then
        echo "‚ùå Arquivo '$DOCUMENT2' n√£o encontrado em: $WINDOWS_SOURCE"
        return 1
    fi
    
    # Copiar arquivos
    cp "$WINDOWS_SOURCE/$DOCUMENT1" "$LOCAL_PROJECT_DIR/"
    cp "$WINDOWS_SOURCE/$DOCUMENT2" "$LOCAL_PROJECT_DIR/"
    
    # Verificar se a c√≥pia foi bem-sucedida
    if [ -f "$LOCAL_PROJECT_DIR/$DOCUMENT1" ] && [ -f "$LOCAL_PROJECT_DIR/$DOCUMENT2" ]; then
        echo "‚úÖ Documentos copiados com sucesso!"
        return 0
    else
        echo "‚ùå Erro ao copiar documentos"
        return 1
    fi
}

# M√©todo alternativo via SCP (se o Windows estiver acess√≠vel via rede)
transfer_via_scp() {
    echo "üåê Tentando transfer√™ncia via SCP..."
    
    # Substitua pelos valores corretos
    WINDOWS_USER="SeuUsuarioWindows"
    WINDOWS_IP="192.168.1.100"  # IP do Windows
    WINDOWS_PATH="C:/Users/Projetos/SYMPHONY_OF_CONNECTION"
    
    echo "üì§ Transferindo '$DOCUMENT1'..."
    scp "$WINDOWS_USER@$WINDOWS_IP:\"$WINDOWS_PATH/$DOCUMENT1\"" "$LOCAL_PROJECT_DIR/" || {
        echo "‚ùå Falha na transfer√™ncia SCP do primeiro documento"
        return 1
    }
    
    echo "üì§ Transferindo '$DOCUMENT2'..."
    scp "$WINDOWS_USER@$WINDOWS_IP:\"$WINDOWS_PATH/$DOCUMENT2\"" "$LOCAL_PROJECT_DIR/" || {
        echo "‚ùå Falha na transfer√™ncia SCP do segundo documento"
        return 1
    }
    
    echo "‚úÖ Transfer√™ncia SCP conclu√≠da!"
    return 0
}

# Adicionar documentos ao Git
add_to_git() {
    echo "üìù Adicionando documentos ao Git..."
    
    cd "$LOCAL_PROJECT_DIR" || exit 1
    
    # Verificar se os arquivos existem localmente
    if [ ! -f "$DOCUMENT1" ] || [ ! -f "$DOCUMENT2" ]; then
        echo "‚ùå Documentos n√£o encontrados no diret√≥rio do projeto"
        return 1
    fi
    
    # Adicionar ao Git
    git add "$DOCUMENT1" "$DOCUMENT2"
    
    # Fazer commit
    git commit -m "docs: Adiciona documenta√ß√£o de arquitetura e instru√ß√µes obrigat√≥rias
    
    - ARQUITETURA T√âCNICA E PADR√ïES DE DESENVOLVIMENTO
    - INSTRU√á√ïES OBRIGAT√ìRIAS - SYMPHONY OF CONNECTION"
    
    # Fazer push
    git push origin main
    
    echo "‚úÖ Documentos adicionados ao reposit√≥rio GitHub!"
}

# Fluxo principal
main() {
    echo "üöÄ INICIANDO TRANSFER√äNCIA DE DOCUMENTOS"
    echo "=========================================="
    
    # Tentar m√©todo de montagem direta primeiro
    if check_windows_access && copy_documents; then
        echo "‚úÖ Transfer√™ncia via montagem direta bem-sucedida"
    else
        echo "üîÑ Tentando m√©todo alternativo..."
        echo "üí° Dica: Certifique-se de que:"
        echo "  1. O Windows est√° acess√≠vel na rede"
        echo "  2. O compartilhamento SMB est√° ativo" 
        echo "  3. Ou os arquivos est√£o em /media/ ou /mnt/"
        echo ""
        echo "üìã Solu√ß√µes manuais:"
        echo "  Op√ß√£o 1: Monte manualmente: sudo mount -t cifs //IP_WINDOWS/Users /mnt/windows -o username=usuario,password=senha"
        echo "  Op√ß√£o 2: Copie via USB/HD externo"
        echo "  Op√ß√£o 3: Use SCP conforme configurado no script"
        
        # Perguntar se deseja tentar SCP
        read -p "Tentar transfer√™ncia via SCP? (s/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Ss]$ ]]; then
            transfer_via_scp || {
                echo "‚ùå Todos os m√©todos autom√°ticos falharam."
                echo "üìã Por favor, copie os arquivos manualmente para: $LOCAL_PROJECT_DIR"
                exit 1
            }
        else
            echo "üìã Por favor, copie os arquivos manualmente para: $LOCAL_PROJECT_DIR"
            exit 1
        fi
    fi
    
    # Adicionar ao Git
    add_to_git
    
    echo ""
    echo "üéâ TRANSFER√äNCIA CONCLU√çDA COM SUCESSO!"
    echo "üìö Documentos inclu√≠dos no reposit√≥rio GitHub"
}

# Executar fluxo principal
main
