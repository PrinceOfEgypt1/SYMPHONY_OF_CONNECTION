#!/bin/bash

echo "üéµ SYMPHONY OF CONNECTION - ADI√á√ÉO DE DOCUMENTOS"
echo "=================================================="

# Nomes exatos dos arquivos (mantenha a capitaliza√ß√£o)
DOCUMENT1="ARQUITETURA T√âCNICA E PADR√ïES DE DESENVOLVIMENTO"
DOCUMENT2="INSTRU√á√ïES OBRIGAT√ìRIAS - SYMPHONY OF CONNECTION"
PROJECT_DIR="$HOME/workspace/SYMPHONY_OF_CONNECTION"

cd "$PROJECT_DIR" || exit 1

# Verificar se os arquivos j√° existem
check_documents() {
    if [ -f "$DOCUMENT1" ] && [ -f "$DOCUMENT2" ]; then
        echo "‚úÖ Ambos os documentos encontrados!"
        return 0
    else
        echo ""
        echo "üìã **INSTRU√á√ïES PARA C√ìPIA MANUAL:**"
        echo "----------------------------------------"
        echo "1. Conecte o dispositivo com os arquivos (USB, HD, etc.)"
        echo "2. Copie os arquivos para este diret√≥rio:"
        echo "   üìÅ $PROJECT_DIR"
        echo ""
        echo "üìÑ Arquivos necess√°rios:"
        echo "   ‚Ä¢ $DOCUMENT1"
        echo "   ‚Ä¢ $DOCUMENT2"
        echo ""
        echo "3. Voc√™ pode usar qualquer m√©todo:"
        echo "   ‚Ä¢ USB/HD externo"
        echo "   ‚Ä¢ Download da nuvem (Google Drive, etc.)"
        echo "   ‚Ä¢ Email para si mesmo"
        echo "   ‚Ä¢ SCP de outra m√°quina"
        echo ""
        echo "4. Ap√≥s copiar, volte aqui e pressione ENTER"
        echo ""
        return 1
    fi
}

# Mostrar status atual
echo "üîç Verificando documentos atuais..."
echo "----------------------------------------"
ls -la "$DOCUMENT1" 2>/dev/null || echo "‚ùå $DOCUMENT1 - AUSENTE"
ls -la "$DOCUMENT2" 2>/dev/null || echo "‚ùå $DOCUMENT2 - AUSENTE"
echo "----------------------------------------"

# Aguardar at√© que os arquivos estejam presentes
while ! check_documents; do
    echo "‚è≥ Aguardando c√≥pia dos documentos..."
    echo "üí° Dica: Voc√™ pode abrir outro terminal para fazer a c√≥pia"
    echo ""
    read -p "Pressione ENTER para verificar novamente (ou Ctrl+C para cancelar): "
    
    # Verificar novamente ap√≥s pressionar ENTER
    echo ""
    echo "üîç Verificando documentos..."
    echo "----------------------------------------"
    ls -la "$DOCUMENT1" 2>/dev/null || echo "‚ùå $DOCUMENT1 - AUSENTE"
    ls -la "$DOCUMENT2" 2>/dev/null || echo "‚ùå $DOCUMENT2 - AUSENTE"
    echo "----------------------------------------"
done

# Quando os arquivos estiverem presentes, adicionar ao Git
echo ""
echo "üöÄ ADICIONANDO DOCUMENTOS AO GIT..."
echo "----------------------------------------"

# Verificar extens√µes dos arquivos e adicionar se necess√°rio
add_extension_if_needed() {
    local file="$1"
    if [ -f "$file" ] && [[ ! "$file" =~ \..+$ ]]; then
        echo "üìù Arquivo '$file' sem extens√£o, adicionando .md"
        mv "$file" "$file.md"
        echo "$file.md"
    else
        echo "$file"
    fi
}

# Processar cada arquivo
DOCUMENT1=$(add_extension_if_needed "$DOCUMENT1")
DOCUMENT2=$(add_extension_if_needed "$DOCUMENT2")

# Adicionar ao Git
echo "üìù Adicionando ao Git..."
git add "$DOCUMENT1" "$DOCUMENT2"

echo "üíæ Criando commit..."
git commit -m "docs: Adiciona documenta√ß√£o t√©cnica completa

- ARQUITETURA T√âCNICA E PADR√ïES DE DESENVOLVIMENTO
- INSTRU√á√ïES OBRIGAT√ìRIAS - SYMPHONY OF CONNECTION

Documenta√ß√£o essencial para padroniza√ß√£o do desenvolvimento do projeto."

echo "üöÄ Enviando para GitHub..."
git push origin main

echo ""
echo "üéâ DOCUMENTOS ADICIONADOS COM SUCESSO!"
echo "=================================================="
echo "üìö Arquivos inclu√≠dos no reposit√≥rio:"
echo "   ‚Ä¢ $DOCUMENT1"
echo "   ‚Ä¢ $DOCUMENT2"
echo ""
echo "üåê GitHub: https://github.com/PrinceOfEgypt1/SYMPHONY_OF_CONNECTION"
echo ""
echo "‚úÖ Processo conclu√≠do! Os documentos agora fazem parte do reposit√≥rio."
